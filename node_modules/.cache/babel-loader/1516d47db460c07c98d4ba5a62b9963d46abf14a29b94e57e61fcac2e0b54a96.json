{"ast":null,"code":"import { uiAction } from \"./uislice\";\nimport { cartAction } from \"./cartslice\";\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiAction.showNotification({\n      status: \"Pending\",\n      title: \"Sending\",\n      message: \"Sending cart data\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://redux-cart-2a053-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiAction.showNotification({\n        status: \"success\",\n        title: \"Success\",\n        message: \"Sending cart data successfully\"\n      }));\n    } catch (error) {\n      dispatch(uiAction.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: \"Sending cart data failed\"\n      }));\n    }\n  };\n};\nconst fetchCartData = () => {\n  return async dispatch => {\n    const fetchdata = async () => {\n      const response = await fetch(\"https://redux-cart-2a053-default-rtdb.firebaseio.com/cart.json\");\n      if (!response.ok) {\n        throw new Error(\"Could not fetch cart data\");\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchdata();\n      dispatch(cartAction.replaceCart);\n    } catch (error) {\n      dispatch(uiAction.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: \"Fetchingcart data failed\"\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiAction","cartAction","sendCartData","cart","dispatch","showNotification","status","title","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","fetchCartData","fetchdata","data","json","cartData","replaceCart"],"sources":["C:/Users/HP/Desktop/01-starting-project/src/store/cartAction.js"],"sourcesContent":["import { uiAction } from \"./uislice\";\r\nimport { cartAction } from \"./cartslice\";\r\nexport const sendCartData = (cart) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiAction.showNotification({\r\n        status: \"Pending\",\r\n        title: \"Sending\",\r\n        message: \"Sending cart data\",\r\n      })\r\n    );\r\n\r\n    const sendRequest = async () => {\r\n      const response = await fetch(\r\n        \"https://redux-cart-2a053-default-rtdb.firebaseio.com/cart.json\",\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify(cart),\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Sending cart data failed\");\r\n      }\r\n    };\r\n    try {\r\n      await sendRequest();\r\n      dispatch(\r\n        uiAction.showNotification({\r\n          status: \"success\",\r\n          title: \"Success\",\r\n          message: \"Sending cart data successfully\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiAction.showNotification({\r\n          status: \"error\",\r\n          title: \"Error\",\r\n          message: \"Sending cart data failed\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nconst fetchCartData = () => {\r\n  return async (dispatch) => {\r\n    const fetchdata = async () => {\r\n      const response = await fetch(\r\n        \"https://redux-cart-2a053-default-rtdb.firebaseio.com/cart.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Could not fetch cart data\");\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    };\r\n    try {\r\n       const cartData = await fetchdata();\r\n       dispatch(cartAction.replaceCart)\r\n\r\n    } catch (error) {\r\n      dispatch(\r\n        uiAction.showNotification({\r\n          status: \"error\",\r\n          title: \"Error\",\r\n          message: \"Fetchingcart data failed\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,WAAW;AACpC,SAASC,UAAU,QAAQ,aAAa;AACxC,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CACNJ,QAAQ,CAACK,gBAAgB,CAAC;MACxBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,SAAS;MAChBC,OAAO,EAAE;IACX,CAAC,CAAC,CACH;IAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAAgE,EAChE;QACEC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;MAC3B,CAAC,CACF;MACD,IAAI,CAACO,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;IACF,CAAC;IACD,IAAI;MACF,MAAMR,WAAW,EAAE;MACnBL,QAAQ,CACNJ,QAAQ,CAACK,gBAAgB,CAAC;QACxBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,SAAS;QAChBC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdd,QAAQ,CACNJ,QAAQ,CAACK,gBAAgB,CAAC;QACxBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH;EACF,CAAC;AACH,CAAC;AAED,MAAMW,aAAa,GAAGA,CAAA,KAAM;EAC1B,OAAO,MAAOf,QAAQ,IAAK;IACzB,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAAgE,CACjE;MAED,IAAI,CAACD,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;MACA,MAAMI,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,EAAE;MAClC,OAAOD,IAAI;IACb,CAAC;IACD,IAAI;MACD,MAAME,QAAQ,GAAG,MAAMH,SAAS,EAAE;MAClChB,QAAQ,CAACH,UAAU,CAACuB,WAAW,CAAC;IAEnC,CAAC,CAAC,OAAON,KAAK,EAAE;MACdd,QAAQ,CACNJ,QAAQ,CAACK,gBAAgB,CAAC;QACxBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}